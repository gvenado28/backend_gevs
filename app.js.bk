// app.js
const express = require('express');
const cors = require('cors'); // Importa CORS
const sequelize = require('./config/sequelize'); // Importa la conexión de Sequelize
const authRoutes = require('./authRoutes'); // Importa las rutas de autenticación
const petRoutes = require('./petRoutes'); // Importa las rutas de PET

const app = express();
const port = process.env.PORT || 5000;

// Middleware para habilitar CORS
const allowedOrigins = ['http://localhost:3000', 'http://54.193.165.136:5000'];

const corsOptions = {
  origin: (origin, callback) => {
    // Permitir el acceso si el origen está en la lista de permitidos o si es undefined (para pruebas locales)
    if (!origin || allowedOrigins.includes(origin)) {
      callback(null, true);
    } else {
      callback(new Error('Origen no permitido por CORS'));
    }
  },
  methods: ['GET', 'POST', 'PUT', 'DELETE'],
  allowedHeaders: ['Content-Type', 'Authorization'],
  credentials: true,
};

app.use(cors(corsOptions));

app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.use((req, res, next) => {
    res.header('Access-Control-Allow-Credentials', 'true'); // Permite el envío de credenciales
    next();
});

app.options('*', cors()); // Permitir todas las solicitudes OPTIONS (pre-flight)

// Prueba de conexión a la base de datos
sequelize.authenticate()
  .then(() => {
    console.log('Conexión exitosa a la base de datos.');
  })
  .catch(err => {
    console.error('Error al conectar a la base de datos:', err);
  });

// Rutas de autenticación
app.use('/api/auth', authRoutes); // Usa las rutas de autenticación con el prefijo /api/auth

// Rutas de captura de PET
app.use('/api/pet', petRoutes); // Usa las rutas de PET con el prefijo /api/pet

// Ruta raíz para verificar que el servidor está corriendo
app.get('/', (req, res) => {
  res.send('Aplicación corriendo y conectada a la base de datos.');
});

module.exports = app; // Exporta la aplicación para pruebas o configuración adicional
